#include "developer.h"


Developer::Developer(std::string name, int32_t base_salary, bool has_bonus) :
        Employee(name, base_salary), _has_bonus(has_bonus) {}

void Developer::read_specific_employee(std::istream& in) {
    in >> _has_bonus;
}

void Developer::print_specific_employee(std::ostream& out) const {
    out << "Developer" << std::endl;
    out << "Name: " << _name << std::endl;
    out << "Base Salary: " << _base_salary << std::endl;
    out << "Has bonus: " << (_has_bonus ? "+" : "-") << std::endl;
}

void Developer::read_specific_employee_from_file(std::ifstream &in) {
    char bonus[1];
    in.read(bonus, 1);
    _has_bonus = bonus[0] != '\0';
}

void Developer::print_specific_employee_to_file(std::ofstream &out) const {
    int32_t type = DEVELOPER_TYPE;
    print_int_to_file(out, type);
    print_name(out);
    print_int_to_file(out, _base_salary);
    out.write((char*)&_has_bonus, 1);
}
